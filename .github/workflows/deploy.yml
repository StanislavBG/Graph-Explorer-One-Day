name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  NODE_VERSION: '18'
  NPM_VERSION: '10'

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Full history for better caching
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          npm-version: ${{ env.NPM_VERSION }}
          cache: 'npm'
      
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: |
          npm ci --legacy-peer-deps --prefer-offline --no-audit
        env:
          NODE_ENV: development
      
      - name: Verify dependencies
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Installed packages: $(npm list --depth=0 | wc -l)"
      
      - name: Build with Next.js
        run: |
          echo "Starting Next.js build..."
          npm run build:gh-pages
          echo "Build completed successfully!"
        env:
          NODE_ENV: production
          NEXT_TELEMETRY_DISABLED: 1
      
      - name: Verify build output
        run: |
          echo "Build output contents:"
          ls -la out/
          echo "Data files check:"
          ls -la out/data.* || echo "No data files found"
          echo "Build verification complete!"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out
          retention-days: 1 # Keep artifacts for 1 day to save storage

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    timeout-minutes: 5
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          timeout-minutes: 5
      
      - name: Verify deployment
        run: |
          echo "Deployment completed!"
          echo "Page URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Deployment ID: ${{ steps.deployment.outputs.deployment_id }}"
      
      - name: Health check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          echo "Deployment should now be accessible at: ${{ steps.deployment.outputs.page_url }}" 